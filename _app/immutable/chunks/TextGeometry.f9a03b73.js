import{J as f,c as x,k as v,M as T,K as k}from"./three.module.1f5a1d46.js";class P{constructor(n){this.isFont=!0,this.type="Font",this.data=n}generateShapes(n,e=100){const i=[],r=M(n,e,this.data);for(let h=0,c=r.length;h<c;h++)i.push(...r[h].toShapes());return i}}function M(s,n,e){const i=Array.from(s),r=n/e.resolution,h=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*r,c=[];let l=0,d=0;for(let u=0;u<i.length;u++){const a=i[u];if(a===`
`)l=0,d-=h;else{const p=S(a,r,l,d,e);l+=p.offsetX,c.push(p.path)}}return c}function S(s,n,e,i,r){const h=r.glyphs[s]||r.glyphs["?"];if(!h){console.error('THREE.Font: character "'+s+'" does not exists in font family '+r.familyName+".");return}const c=new f;let l,d,u,a,p,b,g,y;if(h.o){const t=h._cachedOutline||(h._cachedOutline=h.o.split(" "));for(let o=0,w=t.length;o<w;)switch(t[o++]){case"m":l=t[o++]*n+e,d=t[o++]*n+i,c.moveTo(l,d);break;case"l":l=t[o++]*n+e,d=t[o++]*n+i,c.lineTo(l,d);break;case"q":u=t[o++]*n+e,a=t[o++]*n+i,p=t[o++]*n+e,b=t[o++]*n+i,c.quadraticCurveTo(p,b,u,a);break;case"b":u=t[o++]*n+e,a=t[o++]*n+i,p=t[o++]*n+e,b=t[o++]*n+i,g=t[o++]*n+e,y=t[o++]*n+i,c.bezierCurveTo(p,b,g,y,u,a);break}}return{offsetX:h.ha*n,path:c}}function F(s){return new x(new v(1,1,1),new T({color:s}))}function z(){let s=!1,n=!1,e=window.innerHeight/2,i=window.innerWidth/2;return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(s=!0),window.innerWidth<1e3&&(n=!0),(s||n)&&(e=window.innerHeight/2,i=window.innerWidth-20),{width:i,height:e}}class C extends k{constructor(n,e={}){const i=e.font;if(i===void 0)super();else{const r=i.generateShapes(n,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(r,e)}this.type="TextGeometry"}}export{P as F,C as T,F as d,z as g};

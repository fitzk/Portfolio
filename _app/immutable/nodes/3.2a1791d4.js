import{s as ns,n as Pn,o as ss}from"../chunks/scheduler.e108d1fd.js";import{S as as,i as ts,g as e,s as u,H as $,h as p,x,c as i,j as h,z as O,f as s,k as C,a as t,y as r}from"../chunks/index.aaba837c.js";import{b as An,B as Sn,M as Mn,S as xn,P as Cn,W as bn,e as Rn,G as es,C as ps}from"../chunks/three.module.a94c37b9.js";import{l as yn,j as os,a as cs}from"../chunks/colors.687c7ab1.js";function En(J){return new An(new Sn(1,1,1),new Mn({color:J}))}function ls(J){let b,K="Draw a Cube",G,y,o,k,c="html",m,f,l,v=`<code class="language-html"><span class="token comment">&lt;!-- create canvas element --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basicsDrawCube<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,w,d,T="javascript",gn,V,Q,Jn=`<code class="language-js"><span class="token comment">// javascript</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// draw a cube</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0x8CD790</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// camera</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> width <span class="token operator">/</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// move camera in front of cube by moving camera along z access</span>
camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> 
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// renderer</span>
<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token literal-property property">canvas</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"basicsDrawCube"</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,_n,F,U,j,Bn="Transform Cubes",nn,P,In="Axis helper also shown in example",sn,R,zn="Rotate & Reposition Single Cube",an,E,L,W,tn,Kn=`<code class="language-js"><span class="token comment">// draw single cube (same as prev example)</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0x8CD790</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// reorder before rotation to avoid axis lock / confusion</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span><span class="token function">reorder</span><span class="token punctuation">(</span><span class="token string">'YXZ'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// Math.PI = half rotation on y axis</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span> 
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// axis helper</span>
<span class="token keyword">const</span> axisHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axisHelper<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Hn,X,en,A,Dn="Group Three Cubes & Rotate on y Axis",pn,S,Gn="Draw three cubes, this example uses a helper function refer to previous examples for how to draw a cube",on,g,q,cn,Qn=`<code class="language-js">
<span class="token comment">// transformations</span>
<span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x98B9F2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secondCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x8CD790</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> thirdCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x918EF4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// move two of the cubes so they do not overlap</span>
secondCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> 
thirdCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>firstCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>secondCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>thirdCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// rotate group on y axis</span></code>`,Tn,Y,ln,M,Vn="Animation",un,B,Wn="Ensure animation is the same speed regardless of viewer’s computer FPS",rn,I,qn="Animate Single Cube Rotation",kn,_,N,mn,Un=`<code class="language-js">
<span class="token keyword">const</span> clock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> elapsedTime <span class="token operator">=</span> clock<span class="token punctuation">.</span><span class="token function">getElapsedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> elapsedTime<span class="token punctuation">;</span>
  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,jn,Z,dn,z,Nn="references & inspiration",wn,D,Fn='<li><a href="https://threejs.org/examples" rel="nofollow">https://threejs.org/examples</a></li> <li><a href="https://threejs-journey.com" rel="nofollow">https://threejs-journey.com</a></li>';return{c(){b=e("h2"),b.textContent=K,G=u(),y=e("div"),o=e("span"),k=e("p"),k.textContent=c,m=u(),f=e("pre"),l=new $(!1),w=u(),d=e("p"),d.textContent=T,gn=u(),V=e("pre"),Q=new $(!1),_n=u(),F=e("canvas"),U=u(),j=e("h2"),j.textContent=Bn,nn=u(),P=e("p"),P.textContent=In,sn=u(),R=e("h3"),R.textContent=zn,an=u(),E=e("div"),L=e("span"),W=e("pre"),tn=new $(!1),Hn=u(),X=e("canvas"),en=u(),A=e("h3"),A.textContent=Dn,pn=u(),S=e("p"),S.textContent=Gn,on=u(),g=e("div"),q=e("pre"),cn=new $(!1),Tn=u(),Y=e("canvas"),ln=u(),M=e("h2"),M.textContent=Vn,un=u(),B=e("p"),B.textContent=Wn,rn=u(),I=e("h3"),I.textContent=qn,kn=u(),_=e("div"),N=e("pre"),mn=new $(!1),jn=u(),Z=e("canvas"),dn=u(),z=e("p"),z.textContent=Nn,wn=u(),D=e("ol"),D.innerHTML=Fn,this.h()},l(n){b=p(n,"H2",{"data-svelte-h":!0}),x(b)!=="svelte-1tax6m4"&&(b.textContent=K),G=i(n),y=p(n,"DIV",{class:!0});var a=h(y);o=p(a,"SPAN",{});var H=h(o);k=p(H,"P",{"data-svelte-h":!0}),x(k)!=="svelte-4hgumj"&&(k.textContent=c),m=i(H),f=p(H,"PRE",{class:!0});var Ln=h(f);l=O(Ln,!1),Ln.forEach(s),w=i(H),d=p(H,"P",{"data-svelte-h":!0}),x(d)!=="svelte-1wj58xl"&&(d.textContent=T),gn=i(H),V=p(H,"PRE",{class:!0});var Xn=h(V);Q=O(Xn,!1),Xn.forEach(s),H.forEach(s),_n=i(a),F=p(a,"CANVAS",{id:!0}),h(F).forEach(s),a.forEach(s),U=i(n),j=p(n,"H2",{"data-svelte-h":!0}),x(j)!=="svelte-192pvy4"&&(j.textContent=Bn),nn=i(n),P=p(n,"P",{"data-svelte-h":!0}),x(P)!=="svelte-1sk11jw"&&(P.textContent=In),sn=i(n),R=p(n,"H3",{"data-svelte-h":!0}),x(R)!=="svelte-18388pi"&&(R.textContent=zn),an=i(n),E=p(n,"DIV",{class:!0});var hn=h(E);L=p(hn,"SPAN",{});var Yn=h(L);W=p(Yn,"PRE",{class:!0});var Zn=h(W);tn=O(Zn,!1),Zn.forEach(s),Yn.forEach(s),Hn=i(hn),X=p(hn,"CANVAS",{id:!0}),h(X).forEach(s),hn.forEach(s),en=i(n),A=p(n,"H3",{"data-svelte-h":!0}),x(A)!=="svelte-1j6wysp"&&(A.textContent=Dn),pn=i(n),S=p(n,"P",{"data-svelte-h":!0}),x(S)!=="svelte-dmkqlg"&&(S.textContent=Gn),on=i(n),g=p(n,"DIV",{class:!0});var fn=h(g);q=p(fn,"PRE",{class:!0});var $n=h(q);cn=O($n,!1),$n.forEach(s),Tn=i(fn),Y=p(fn,"CANVAS",{id:!0}),h(Y).forEach(s),fn.forEach(s),ln=i(n),M=p(n,"H2",{"data-svelte-h":!0}),x(M)!=="svelte-1yzbqe4"&&(M.textContent=Vn),un=i(n),B=p(n,"P",{"data-svelte-h":!0}),x(B)!=="svelte-1es6tch"&&(B.textContent=Wn),rn=i(n),I=p(n,"H3",{"data-svelte-h":!0}),x(I)!=="svelte-111wzic"&&(I.textContent=qn),kn=i(n),_=p(n,"DIV",{class:!0});var vn=h(_);N=p(vn,"PRE",{class:!0});var On=h(N);mn=O(On,!1),On.forEach(s),jn=i(vn),Z=p(vn,"CANVAS",{id:!0}),h(Z).forEach(s),vn.forEach(s),dn=i(n),z=p(n,"P",{"data-svelte-h":!0}),x(z)!=="svelte-h27kpk"&&(z.textContent=Nn),wn=i(n),D=p(n,"OL",{"data-svelte-h":!0}),x(D)!=="svelte-p3thy0"&&(D.innerHTML=Fn),this.h()},h(){l.a=null,C(f,"class","language-html"),Q.a=null,C(V,"class","language-js"),C(F,"id","basicsDrawCube"),C(y,"class","example"),tn.a=null,C(W,"class","language-js"),C(X,"id","basicsTransformCube"),C(E,"class","example"),cn.a=null,C(q,"class","language-js"),C(Y,"id","basicsTransformThreeCubes"),C(g,"class","example"),mn.a=null,C(N,"class","language-js"),C(Z,"id","animateCube"),C(_,"class","example")},m(n,a){t(n,b,a),t(n,G,a),t(n,y,a),r(y,o),r(o,k),r(o,m),r(o,f),l.m(v,f),r(o,w),r(o,d),r(o,gn),r(o,V),Q.m(Jn,V),r(y,_n),r(y,F),t(n,U,a),t(n,j,a),t(n,nn,a),t(n,P,a),t(n,sn,a),t(n,R,a),t(n,an,a),t(n,E,a),r(E,L),r(L,W),tn.m(Kn,W),r(E,Hn),r(E,X),t(n,en,a),t(n,A,a),t(n,pn,a),t(n,S,a),t(n,on,a),t(n,g,a),r(g,q),cn.m(Qn,q),r(g,Tn),r(g,Y),t(n,ln,a),t(n,M,a),t(n,un,a),t(n,B,a),t(n,rn,a),t(n,I,a),t(n,kn,a),t(n,_,a),r(_,N),mn.m(Un,N),r(_,jn),r(_,Z),t(n,dn,a),t(n,z,a),t(n,wn,a),t(n,D,a)},p:Pn,i:Pn,o:Pn,d(n){n&&(s(b),s(G),s(y),s(U),s(j),s(nn),s(P),s(sn),s(R),s(an),s(E),s(en),s(A),s(pn),s(S),s(on),s(g),s(ln),s(M),s(un),s(B),s(rn),s(I),s(kn),s(_),s(dn),s(z),s(wn),s(D))}}}function us(J){function b(){const o=window.innerHeight/2,k=window.innerWidth/2,c=new xn,m=new Sn(1,1,1),f=new Mn({color:yn}),l=new An(m,f);c.add(l);const v=new Cn(75,k/o);v.position.z=4,c.add(v);const w=new bn({canvas:document.getElementById("basicsDrawCube")??void 0});w.setSize(k,o),w.render(c,v)}function K(){const o=window.innerHeight/2,k=window.innerWidth/2,c=new xn,m=new Sn(1,1,1),f=new Mn({color:yn}),l=new An(m,f);l.position.set(2,1,0),l.scale.set(1,.5,.5),l.rotation.reorder("YXZ"),l.rotation.y=Math.PI,l.rotation.x=Math.PI,c.add(l);const v=new Rn(4);c.add(v);const w=new Cn(75,k/o);w.position.z=4,w.lookAt(l.position),c.add(w);const d=new bn({canvas:document.getElementById("basicsTransformCube")??void 0});d.setSize(k,o),d.render(c,w)}function G(){const o=window.innerHeight/2,k=window.innerWidth/2,c=new xn,m=new es;c.add(m);const f=En(os),l=En(yn),v=En(cs);l.position.x=-2,v.position.x=2,m.add(f),m.add(l),m.add(v),m.rotation.y=1;const w=new Rn(5);c.add(w);const d=new Cn(75,k/o);d.position.z=4,c.add(d);const T=new bn({canvas:document.getElementById("basicsTransformThreeCubes")??void 0});T.setSize(k,o),T.render(c,d)}function y(){const o=window.innerHeight/2,k=window.innerWidth/2,c=new xn,m=En(yn);c.add(m);const f=new Rn(4);c.add(f);const l=new Cn(75,k/o);l.position.z=4,c.add(l);const v=new bn({canvas:document.getElementById("animateCube")??void 0});v.setSize(k,o);const w=new ps;function d(){const T=w.getElapsedTime();m.rotation.y=T,v.render(c,l),window.requestAnimationFrame(d)}d()}return ss(()=>{b(),K(),G(),y()}),[]}class ds extends as{constructor(b){super(),ts(this,b,us,ls,ns,{})}}export{ds as component};

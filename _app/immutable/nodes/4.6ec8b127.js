import{s as In,n as ln,o as zn}from"../chunks/scheduler.e108d1fd.js";import{S as Gn,i as Vn,g as t,s as r,H as an,h as e,x,c as k,j as h,z as tn,f as s,k as b,a as p,y as i}from"../chunks/index.aaba837c.js";import{c as un,B as Rn,f as Pn,g as Mn,d as rn,W as kn,i as Bn,G as Wn}from"../chunks/three.module.25eeb3a0.js";import{d as mn}from"../chunks/drawingHelpers.698c5112.js";import{l as dn,j as Ln,a as Nn}from"../chunks/colors.687c7ab1.js";function qn(hn){let w,L="Draw a Cube",S,u,o,c,d="html",C,l,m,f=`<code class="language-html"><span class="token comment">&lt;!-- create canvas element --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basicsDrawCube<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,v,y,wn="javascript",en,A,N,Sn=`<code class="language-js"><span class="token comment">// javascript</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// draw a cube</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0x8CD790</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// camera</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> width <span class="token operator">/</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// move camera in front of cube by moving camera along z access</span>
camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> 
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// renderer</span>
<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token literal-property property">canvas</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"basicsDrawCube"</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,pn,z,q,H,fn="Transform Cubes",F,T,vn="Axis helper also shown in example",X,j,xn="Rotate & Reposition Single Cube",Y,g,G,D,Z,An=`<code class="language-js"><span class="token comment">// draw single cube (same as prev example)</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Me</span> <span class="token function">dshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0x8CD790</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// reorder before rotation to avoid axis lock / confusion</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span><span class="token function">reorder</span><span class="token punctuation">(</span><span class="token string">'YXZ'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// Math.PI = half rotation on y axis</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span> 
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// axis helper</span>
<span class="token keyword">const</span> axisHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axisHelper<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,on,V,$,R,bn="Group Three Cubes & Rotate on y Axis",O,P,Cn="Draw three cubes, this example uses a helper function refer to previous examples for how to draw a cube",J,E,I,K,Dn=`<code class="language-js">
<span class="token comment">// transformations</span>
<span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x98B9F2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secondCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x8CD790</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> thirdCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x918EF4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// move two of the cubes so they do not overlap</span>
secondCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> 
thirdCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>firstCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>secondCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>thirdCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// rotate group on y axis</span></code>`,cn,W,Q,M,yn="references & inspiration",U,B,gn='<li><a href="https://threejs.org/examples" rel="nofollow">https://threejs.org/examples</a></li> <li><a href="https://threejs-journey.com" rel="nofollow">https://threejs-journey.com</a></li>';return{c(){w=t("h2"),w.textContent=L,S=r(),u=t("div"),o=t("span"),c=t("p"),c.textContent=d,C=r(),l=t("pre"),m=new an(!1),v=r(),y=t("p"),y.textContent=wn,en=r(),A=t("pre"),N=new an(!1),pn=r(),z=t("canvas"),q=r(),H=t("h2"),H.textContent=fn,F=r(),T=t("p"),T.textContent=vn,X=r(),j=t("h3"),j.textContent=xn,Y=r(),g=t("div"),G=t("span"),D=t("pre"),Z=new an(!1),on=r(),V=t("canvas"),$=r(),R=t("h3"),R.textContent=bn,O=r(),P=t("p"),P.textContent=Cn,J=r(),E=t("div"),I=t("pre"),K=new an(!1),cn=r(),W=t("canvas"),Q=r(),M=t("p"),M.textContent=yn,U=r(),B=t("ol"),B.innerHTML=gn,this.h()},l(n){w=e(n,"H2",{"data-svelte-h":!0}),x(w)!=="svelte-1tax6m4"&&(w.textContent=L),S=k(n),u=e(n,"DIV",{class:!0});var a=h(u);o=e(a,"SPAN",{});var _=h(o);c=e(_,"P",{"data-svelte-h":!0}),x(c)!=="svelte-4hgumj"&&(c.textContent=d),C=k(_),l=e(_,"PRE",{class:!0});var En=h(l);m=tn(En,!1),En.forEach(s),v=k(_),y=e(_,"P",{"data-svelte-h":!0}),x(y)!=="svelte-1wj58xl"&&(y.textContent=wn),en=k(_),A=e(_,"PRE",{class:!0});var _n=h(A);N=tn(_n,!1),_n.forEach(s),_.forEach(s),pn=k(a),z=e(a,"CANVAS",{id:!0}),h(z).forEach(s),a.forEach(s),q=k(n),H=e(n,"H2",{"data-svelte-h":!0}),x(H)!=="svelte-192pvy4"&&(H.textContent=fn),F=k(n),T=e(n,"P",{"data-svelte-h":!0}),x(T)!=="svelte-1sk11jw"&&(T.textContent=vn),X=k(n),j=e(n,"H3",{"data-svelte-h":!0}),x(j)!=="svelte-18388pi"&&(j.textContent=xn),Y=k(n),g=e(n,"DIV",{class:!0});var nn=h(g);G=e(nn,"SPAN",{});var Hn=h(G);D=e(Hn,"PRE",{class:!0});var Tn=h(D);Z=tn(Tn,!1),Tn.forEach(s),Hn.forEach(s),on=k(nn),V=e(nn,"CANVAS",{id:!0}),h(V).forEach(s),nn.forEach(s),$=k(n),R=e(n,"H3",{"data-svelte-h":!0}),x(R)!=="svelte-1j6wysp"&&(R.textContent=bn),O=k(n),P=e(n,"P",{"data-svelte-h":!0}),x(P)!=="svelte-dmkqlg"&&(P.textContent=Cn),J=k(n),E=e(n,"DIV",{class:!0});var sn=h(E);I=e(sn,"PRE",{class:!0});var jn=h(I);K=tn(jn,!1),jn.forEach(s),cn=k(sn),W=e(sn,"CANVAS",{id:!0}),h(W).forEach(s),sn.forEach(s),Q=k(n),M=e(n,"P",{"data-svelte-h":!0}),x(M)!=="svelte-h27kpk"&&(M.textContent=yn),U=k(n),B=e(n,"OL",{"data-svelte-h":!0}),x(B)!=="svelte-p3thy0"&&(B.innerHTML=gn),this.h()},h(){m.a=null,b(l,"class","language-html"),N.a=null,b(A,"class","language-js"),b(z,"id","basicsDrawCube"),b(u,"class","example"),Z.a=null,b(D,"class","language-js"),b(V,"id","basicsTransformCube"),b(g,"class","example"),K.a=null,b(I,"class","language-js"),b(W,"id","basicsTransformThreeCubes"),b(E,"class","example")},m(n,a){p(n,w,a),p(n,S,a),p(n,u,a),i(u,o),i(o,c),i(o,C),i(o,l),m.m(f,l),i(o,v),i(o,y),i(o,en),i(o,A),N.m(Sn,A),i(u,pn),i(u,z),p(n,q,a),p(n,H,a),p(n,F,a),p(n,T,a),p(n,X,a),p(n,j,a),p(n,Y,a),p(n,g,a),i(g,G),i(G,D),Z.m(An,D),i(g,on),i(g,V),p(n,$,a),p(n,R,a),p(n,O,a),p(n,P,a),p(n,J,a),p(n,E,a),i(E,I),K.m(Dn,I),i(E,cn),i(E,W),p(n,Q,a),p(n,M,a),p(n,U,a),p(n,B,a)},p:ln,i:ln,o:ln,d(n){n&&(s(w),s(S),s(u),s(q),s(H),s(F),s(T),s(X),s(j),s(Y),s(g),s($),s(R),s(O),s(P),s(J),s(E),s(Q),s(M),s(U),s(B))}}}function Fn(hn){function w(){const u=window.innerHeight/2,o=window.innerWidth/2,c=new un,d=new Rn(1,1,1),C=new Pn({color:dn}),l=new Mn(d,C);c.add(l);const m=new rn(75,o/u);m.position.z=4,c.add(m);const f=new kn({canvas:document.getElementById("basicsDrawCube")??void 0});f.setSize(o,u),f.render(c,m)}function L(){const u=window.innerHeight/2,o=window.innerWidth/2,c=new un,d=new Rn(1,1,1),C=new Pn({color:dn}),l=new Mn(d,C);l.position.set(2,1,0),l.scale.set(1,.5,.5),l.rotation.reorder("YXZ"),l.rotation.y=Math.PI,l.rotation.x=Math.PI,c.add(l);const m=new Bn(4);c.add(m);const f=new rn(75,o/u);f.position.z=4,f.lookAt(l.position),c.add(f);const v=new kn({canvas:document.getElementById("basicsTransformCube")??void 0});v.setSize(o,u),v.render(c,f)}function S(){const u=window.innerHeight/2,o=window.innerWidth/2,c=new un,d=new Wn;c.add(d);const C=mn(Ln),l=mn(dn),m=mn(Nn);l.position.x=-2,m.position.x=2,d.add(C),d.add(l),d.add(m),d.rotation.y=1;const f=new Bn(5);c.add(f);const v=new rn(75,o/u);v.position.z=4,c.add(v);const y=new kn({canvas:document.getElementById("basicsTransformThreeCubes")??void 0});y.setSize(o,u),y.render(c,v)}return zn(()=>{w(),L(),S()}),[]}class Jn extends Gn{constructor(w){super(),Vn(this,w,Fn,qn,In,{})}}export{Jn as component};

import{s as cn,n as Y,o as un}from"../chunks/scheduler.e108d1fd.js";import{S as ln,i as kn,g as u,s as m,H as V,h as l,x as L,c as w,j as x,z as X,f as s,k as g,a as t}from"../chunks/index.aaba837c.js";import{C as rn,g as J,B as K,f as O,c as Z,d as $,W as D,i as pn,G as dn}from"../chunks/three.module.9f7d1369.js";function F(){const T=new rn(16777215);return T.setHex(Math.random()*16777215),new J(new K(1,1,1),new O({color:T}))}function mn(T){let i,M="Static Red Cube",H,o,e,k='<code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basicsStaticRedCube<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>',f,p,c,r=`<code class="language-js">
    <span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// red cube</span>
    <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// camera</span>
    <span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
    camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// move camera in front of cube by moving camera along z access</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// renderer</span>
    <span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
        <span class="token literal-property property">canvas</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"basicsStaticRedCube"</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code>`,d,h,S,B,z,b,Q="Transform Cubes",P,y,U="Rotate & reposition red cube",W,C,A,en=`<code class="language-js">    <span class="token comment">// red cube (same as prev example)</span>
    <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mesh<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span><span class="token function">reorder</span><span class="token punctuation">(</span><span class="token string">'YXZ'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// reorder before rotation to avoid axis lock / confusion</span>
    mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span> <span class="token comment">// half rotation on y axis</span>
    mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span> 
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// axis helper</span>
    <span class="token keyword">const</span> axisHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axisHelper<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,G,R,I,E,nn="Three cubes",j,v,q,on=`<code class="language-js">
<span class="token comment">// helper - draws a colored cube</span>
<span class="token keyword">function</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Color</span><span class="token punctuation">(</span> <span class="token number">0xffffff</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    color<span class="token punctuation">.</span><span class="token function">setHex</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xffffff</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            color
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// transformations</span>
<span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secondCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> thirdCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// move two of the cubes out of the </span>
<span class="token comment">// center of the canvas so they do </span>
<span class="token comment">// not overlap</span>
secondCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> 
thirdCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>firstCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>secondCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>thirdCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// rotate group on y axis</span></code>`,N,_;return{c(){i=u("h2"),i.textContent=M,H=m(),o=u("pre"),e=new V(!1),f=m(),p=u("pre"),c=new V(!1),d=m(),h=u("canvas"),S=m(),B=u("hr"),z=m(),b=u("h2"),b.textContent=Q,P=m(),y=u("h3"),y.textContent=U,W=m(),C=u("pre"),A=new V(!1),G=m(),R=u("canvas"),I=m(),E=u("h3"),E.textContent=nn,j=m(),v=u("pre"),q=new V(!1),N=m(),_=u("canvas"),this.h()},l(n){i=l(n,"H2",{"data-svelte-h":!0}),L(i)!=="svelte-14tpb38"&&(i.textContent=M),H=w(n),o=l(n,"PRE",{class:!0});var a=x(o);e=X(a,!1),a.forEach(s),f=w(n),p=l(n,"PRE",{class:!0});var sn=x(p);c=X(sn,!1),sn.forEach(s),d=w(n),h=l(n,"CANVAS",{id:!0}),x(h).forEach(s),S=w(n),B=l(n,"HR",{}),z=w(n),b=l(n,"H2",{"data-svelte-h":!0}),L(b)!=="svelte-192pvy4"&&(b.textContent=Q),P=w(n),y=l(n,"H3",{"data-svelte-h":!0}),L(y)!=="svelte-lxgqvz"&&(y.textContent=U),W=w(n),C=l(n,"PRE",{class:!0});var an=x(C);A=X(an,!1),an.forEach(s),G=w(n),R=l(n,"CANVAS",{id:!0}),x(R).forEach(s),I=w(n),E=l(n,"H3",{"data-svelte-h":!0}),L(E)!=="svelte-z6e5ec"&&(E.textContent=nn),j=w(n),v=l(n,"PRE",{class:!0});var tn=x(v);q=X(tn,!1),tn.forEach(s),N=w(n),_=l(n,"CANVAS",{id:!0}),x(_).forEach(s),this.h()},h(){e.a=null,g(o,"class","language-html"),c.a=null,g(p,"class","language-js"),g(h,"id","basicsStaticRedCube"),A.a=null,g(C,"class","language-js"),g(R,"id","basicsTransformRedCube"),q.a=null,g(v,"class","language-js"),g(_,"id","basicsTransformThreeCubes")},m(n,a){t(n,i,a),t(n,H,a),t(n,o,a),e.m(k,o),t(n,f,a),t(n,p,a),c.m(r,p),t(n,d,a),t(n,h,a),t(n,S,a),t(n,B,a),t(n,z,a),t(n,b,a),t(n,P,a),t(n,y,a),t(n,W,a),t(n,C,a),A.m(en,C),t(n,G,a),t(n,R,a),t(n,I,a),t(n,E,a),t(n,j,a),t(n,v,a),q.m(on,v),t(n,N,a),t(n,_,a)},p:Y,i:Y,o:Y,d(n){n&&(s(i),s(H),s(o),s(f),s(p),s(d),s(h),s(S),s(B),s(z),s(b),s(P),s(y),s(W),s(C),s(G),s(R),s(I),s(E),s(j),s(v),s(N),s(_))}}}function wn(T){function i(){const o=window.innerHeight/2,e=new Z,k=new K(1,1,1),f=new O({color:16711680}),p=new J(k,f);e.add(p);const c=new $(75,window.innerWidth/o);c.position.z=3,e.add(c);const r=new D({canvas:document.getElementById("basicsStaticRedCube")??void 0});r.setSize(window.innerWidth,o),r.render(e,c)}function M(){const o=window.innerHeight/2,e=new Z,k=new K(1,1,1),f=new O({color:16711680}),p=new J(k,f);p.position.set(2,1,0),p.scale.set(1,.5,.5),p.rotation.reorder("YXZ"),p.rotation.y=Math.PI,p.rotation.x=Math.PI,e.add(p);const c=new pn(4);e.add(c);const r=new $(75,window.innerWidth/o);r.position.z=3,r.lookAt(p.position),e.add(r);const d=new D({canvas:document.getElementById("basicsTransformRedCube")??void 0});d.setSize(window.innerWidth,o),d.render(e,r)}function H(){const o=window.innerHeight/2,e=new Z,k=new dn;e.add(k);const f=F(),p=F(),c=F();p.position.x=-2,c.position.x=2,k.add(f),k.add(p),k.add(c),k.rotation.y=1;const r=new pn(4);e.add(r);const d=new $(75,window.innerWidth/o);d.position.z=3,e.add(d);const h=new D({canvas:document.getElementById("basicsTransformThreeCubes")??void 0});h.setSize(window.innerWidth,o),h.render(e,d)}return un(()=>{i(),M(),H()}),[]}class yn extends ln{constructor(i){super(),kn(this,i,wn,mn,cn,{})}}export{yn as component};

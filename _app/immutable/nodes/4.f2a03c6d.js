import{s as dn,n as D,o as wn}from"../chunks/scheduler.e108d1fd.js";import{S as fn,i as hn,g as c,s as i,H as $,h as l,x as S,c as k,j as g,z as O,f as s,k as R,a as t}from"../chunks/index.aaba837c.js";import{C as bn,g as U,B as nn,f as sn,c as F,d as J,W as K,i as kn,G as yn}from"../chunks/three.module.9f7d1369.js";function Q(){const j=new bn(16777215);return j.setHex(Math.random()*16777215),new U(new nn(1,1,1),new sn({color:j}))}function Cn(j){let r,B="Static Red Cube",_,o,e,m='<code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basicsStaticRedCube<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>',f,p,u,d=`<code class="language-js">
    <span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// red cube</span>
    <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// camera</span>
    <span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
    camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// move camera in front of cube by moving camera along z access</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// renderer</span>
    <span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
        <span class="token literal-property property">canvas</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"basicsStaticRedCube"</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code>`,w,h,P,z,W,b,an="Transform Cubes",G,y,tn="Rotate & reposition red cube",A,C,I,rn=`<code class="language-js">    <span class="token comment">// red cube (same as prev example)</span>
    <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mesh<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span><span class="token function">reorder</span><span class="token punctuation">(</span><span class="token string">'YXZ'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// reorder before rotation to avoid axis lock / confusion</span>
    mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span> <span class="token comment">// half rotation on y axis</span>
    mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span> 
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// axis helper</span>
    <span class="token keyword">const</span> axisHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axisHelper<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,L,T,q,x,pn="Group three cubes & rotate group on y axis",N,v,V,mn=`<code class="language-js">
<span class="token comment">// helper - draws a colored cube</span>
<span class="token keyword">function</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Color</span><span class="token punctuation">(</span> <span class="token number">0xffffff</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    color<span class="token punctuation">.</span><span class="token function">setHex</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xffffff</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            color
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// transformations</span>
<span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secondCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> thirdCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// move two of the cubes out of the </span>
<span class="token comment">// center of the canvas so they do </span>
<span class="token comment">// not overlap</span>
secondCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> 
thirdCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>firstCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>secondCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>thirdCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// rotate group on y axis</span></code>`,X,M,Y,E,en="references & inspiration",Z,H,on='<li><a href="https://threejs.org/examples" rel="nofollow">https://threejs.org/examples</a></li> <li><a href="https://threejs-journey.com" rel="nofollow">https://threejs-journey.com</a></li>';return{c(){r=c("h2"),r.textContent=B,_=i(),o=c("pre"),e=new $(!1),f=i(),p=c("pre"),u=new $(!1),w=i(),h=c("canvas"),P=i(),z=c("hr"),W=i(),b=c("h2"),b.textContent=an,G=i(),y=c("h3"),y.textContent=tn,A=i(),C=c("pre"),I=new $(!1),L=i(),T=c("canvas"),q=i(),x=c("h3"),x.textContent=pn,N=i(),v=c("pre"),V=new $(!1),X=i(),M=c("canvas"),Y=i(),E=c("p"),E.textContent=en,Z=i(),H=c("ol"),H.innerHTML=on,this.h()},l(n){r=l(n,"H2",{"data-svelte-h":!0}),S(r)!=="svelte-14tpb38"&&(r.textContent=B),_=k(n),o=l(n,"PRE",{class:!0});var a=g(o);e=O(a,!1),a.forEach(s),f=k(n),p=l(n,"PRE",{class:!0});var cn=g(p);u=O(cn,!1),cn.forEach(s),w=k(n),h=l(n,"CANVAS",{id:!0}),g(h).forEach(s),P=k(n),z=l(n,"HR",{}),W=k(n),b=l(n,"H2",{"data-svelte-h":!0}),S(b)!=="svelte-192pvy4"&&(b.textContent=an),G=k(n),y=l(n,"H3",{"data-svelte-h":!0}),S(y)!=="svelte-lxgqvz"&&(y.textContent=tn),A=k(n),C=l(n,"PRE",{class:!0});var ln=g(C);I=O(ln,!1),ln.forEach(s),L=k(n),T=l(n,"CANVAS",{id:!0}),g(T).forEach(s),q=k(n),x=l(n,"H3",{"data-svelte-h":!0}),S(x)!=="svelte-1a06yqe"&&(x.textContent=pn),N=k(n),v=l(n,"PRE",{class:!0});var un=g(v);V=O(un,!1),un.forEach(s),X=k(n),M=l(n,"CANVAS",{id:!0}),g(M).forEach(s),Y=k(n),E=l(n,"P",{"data-svelte-h":!0}),S(E)!=="svelte-h27kpk"&&(E.textContent=en),Z=k(n),H=l(n,"OL",{"data-svelte-h":!0}),S(H)!=="svelte-p3thy0"&&(H.innerHTML=on),this.h()},h(){e.a=null,R(o,"class","language-html"),u.a=null,R(p,"class","language-js"),R(h,"id","basicsStaticRedCube"),I.a=null,R(C,"class","language-js"),R(T,"id","basicsTransformRedCube"),V.a=null,R(v,"class","language-js"),R(M,"id","basicsTransformThreeCubes")},m(n,a){t(n,r,a),t(n,_,a),t(n,o,a),e.m(m,o),t(n,f,a),t(n,p,a),u.m(d,p),t(n,w,a),t(n,h,a),t(n,P,a),t(n,z,a),t(n,W,a),t(n,b,a),t(n,G,a),t(n,y,a),t(n,A,a),t(n,C,a),I.m(rn,C),t(n,L,a),t(n,T,a),t(n,q,a),t(n,x,a),t(n,N,a),t(n,v,a),V.m(mn,v),t(n,X,a),t(n,M,a),t(n,Y,a),t(n,E,a),t(n,Z,a),t(n,H,a)},p:D,i:D,o:D,d(n){n&&(s(r),s(_),s(o),s(f),s(p),s(w),s(h),s(P),s(z),s(W),s(b),s(G),s(y),s(A),s(C),s(L),s(T),s(q),s(x),s(N),s(v),s(X),s(M),s(Y),s(E),s(Z),s(H))}}}function xn(j){function r(){const o=window.innerHeight/2,e=new F,m=new nn(1,1,1),f=new sn({color:16711680}),p=new U(m,f);e.add(p);const u=new J(75,window.innerWidth/o);u.position.z=3,e.add(u);const d=new K({canvas:document.getElementById("basicsStaticRedCube")??void 0});d.setSize(window.innerWidth,o),d.render(e,u)}function B(){const o=window.innerHeight/2,e=new F,m=new nn(1,1,1),f=new sn({color:16711680}),p=new U(m,f);p.position.set(2,1,0),p.scale.set(1,.5,.5),p.rotation.reorder("YXZ"),p.rotation.y=Math.PI,p.rotation.x=Math.PI,e.add(p);const u=new kn(4);e.add(u);const d=new J(75,window.innerWidth/o);d.position.z=3,d.lookAt(p.position),e.add(d);const w=new K({canvas:document.getElementById("basicsTransformRedCube")??void 0});w.setSize(window.innerWidth,o),w.render(e,d)}function _(){const o=window.innerHeight/2,e=new F,m=new yn;e.add(m);const f=Q(),p=Q(),u=Q();p.position.x=-2,u.position.x=2,m.add(f),m.add(p),m.add(u),m.rotation.y=1;const d=new kn(4);e.add(d);const w=new J(75,window.innerWidth/o);w.position.z=3,e.add(w);const h=new K({canvas:document.getElementById("basicsTransformThreeCubes")??void 0});h.setSize(window.innerWidth,o),h.render(e,w)}return wn(()=>{r(),B(),_()}),[]}class gn extends fn{constructor(r){super(),hn(this,r,xn,Cn,dn,{})}}export{gn as component};

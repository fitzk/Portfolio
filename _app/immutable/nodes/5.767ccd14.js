import{s as F,c as Os,u as Zs,g as Ws,d as Js,n as C,o as sn}from"../chunks/scheduler.e108d1fd.js";import{S as G,i as D,g as h,s as _,h as w,j as M,f as o,c as b,k as y,a as i,y as Z,d as T,t as L,H as K,x as j,z as X,r as H,u as P,v as R,w as z,A as Ks,B as Xs,m as Q,n as nn,l as ls,C as aa,b as ua,D as ia,p as ra}from"../chunks/index.5294257e.js";import{g as an,d as is,T as ka,F as ma,t as da}from"../chunks/Yellowtail_Regular.08bf4c6e.js";import{l as Mn,g as fa,m as ys,j as ta,c as ea,t as oa,w as rs,b as Ln,s as ha,a as Cs,d as us}from"../chunks/colors.e07b005e.js";import{S as tn,g as Hn,a as en,W as on,C as Es,B as Pn,M as yn,c as W,i as ks,d as Ts,h as En,A as Rn,D as ms,H as wa,j as $a,k as ga,l as pa,L as ds,T as Ls,m as va,G as xa,n as _a,o as ba,P as Ss,b as ya}from"../chunks/three.module.6d4a35a4.js";import{_ as Sn}from"../chunks/preload-helper.a4192956.js";import{OrbitControls as Ms}from"../chunks/OrbitControls.29d7259e.js";function Ys(l){return(l==null?void 0:l.length)!==void 0?l:Array.from(l)}const Ca=l=>({}),Qs=l=>({});function Ea(l){let n,a,s,t,p;const c=l[1].default,u=Os(c,l,l[0],null),r=l[1].live,v=Os(r,l,l[0],Qs);return{c(){n=h("div"),a=h("article"),u&&u.c(),s=_(),t=h("div"),v&&v.c(),this.h()},l(k){n=w(k,"DIV",{class:!0});var $=M(n);a=w($,"ARTICLE",{class:!0});var S=M(a);u&&u.l(S),S.forEach(o),s=b($),t=w($,"DIV",{class:!0});var E=M(t);v&&v.l(E),E.forEach(o),$.forEach(o),this.h()},h(){y(a,"class","svelte-1yda60y"),y(t,"class","svelte-1yda60y"),y(n,"class","example svelte-1yda60y")},m(k,$){i(k,n,$),Z(n,a),u&&u.m(a,null),Z(n,s),Z(n,t),v&&v.m(t,null),p=!0},p(k,[$]){u&&u.p&&(!p||$&1)&&Zs(u,c,k,k[0],p?Js(c,k[0],$,null):Ws(k[0]),null),v&&v.p&&(!p||$&1)&&Zs(v,r,k,k[0],p?Js(r,k[0],$,Ca):Ws(k[0]),Qs)},i(k){p||(T(u,k),T(v,k),p=!0)},o(k){L(u,k),L(v,k),p=!1},d(k){k&&o(n),u&&u.d(k),v&&v.d(k)}}}function Ta(l,n,a){let{$$slots:s={},$$scope:t}=n;return l.$$set=p=>{"$$scope"in p&&a(0,t=p.$$scope)},[t,s]}class pn extends G{constructor(n){super(),D(this,n,Ta,Ea,F,{})}}function La(l){let n,a="Ensure animation is the same speed regardless of viewer’s computer FPS.",s,t,p,c=`<code class="language-ts"><span class="token keyword">const</span> clock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> elapsedTime <span class="token operator">=</span> clock<span class="token punctuation">.</span><span class="token function">getElapsedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> elapsedTime<span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){n=h("p"),n.textContent=a,s=_(),t=h("pre"),p=new K(!1),this.h()},l(u){n=w(u,"P",{"data-svelte-h":!0}),j(n)!=="svelte-16vcbtf"&&(n.textContent=a),s=b(u),t=w(u,"PRE",{class:!0});var r=M(t);p=X(r,!1),r.forEach(o),this.h()},h(){p.a=null,y(t,"class","language-ts")},m(u,r){i(u,n,r),i(u,s,r),i(u,t,r),p.m(c,t)},p:C,i:C,o:C,d(u){u&&(o(n),o(s),o(t))}}}let Sa=class extends G{constructor(n){super(),D(this,n,null,La,F,{})}};function Ma(l){let n,a;return n=new Sa({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Ha(l){let n;return{c(){n=h("canvas"),this.h()},l(a){n=w(a,"CANVAS",{id:!0,slot:!0}),M(n).forEach(o),this.h()},h(){y(n,"id","animateCubeCanvas"),y(n,"slot","live")},m(a,s){i(a,n,s)},p:C,d(a){a&&o(n)}}}function Pa(l){let n,a;return n=new pn({props:{$$slots:{live:[Ha],default:[Ma]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&1&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Ra(l){return sn(()=>{const{width:n,height:a}=an(),s=new tn,t=is(Mn);s.add(t);const p=new Hn(4);s.add(p);const c=new en(75,n/a);c.position.z=4,s.add(c);const u=new on({canvas:document.getElementById("animateCubeCanvas")??void 0});u.setSize(n,a);const r=new Es;function v(){const k=r.getElapsedTime();t.rotation.y=k,u.render(s,c),window.requestAnimationFrame(v)}v()}),[]}class za extends G{constructor(n){super(),D(this,n,Ra,Pa,F,{})}}function Aa(l){let n,a="I had to dynamically load ‘lil-gui’ to avoid a self not defined error. By default the UI will be mounted in the top right corner of the screen. In order to move the UI next to our canvas, I changed the container to be a sibling of our canvas.",s,t,p,c=`<code class="language-ts"><span class="token keyword">const</span> guiLib <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"lil-gui"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>

<span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">guiLib</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  container<span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"gui"</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  autoPlace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,u,r,v="Then we draw a box and add properties we want to see in the UI.",k,$,S,E=`<code class="language-ts"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  color<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

gui<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gui<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gui<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){n=h("p"),n.textContent=a,s=_(),t=h("pre"),p=new K(!1),u=_(),r=h("p"),r.textContent=v,k=_(),$=h("pre"),S=new K(!1),this.h()},l(f){n=w(f,"P",{"data-svelte-h":!0}),j(n)!=="svelte-1fki2xu"&&(n.textContent=a),s=b(f),t=w(f,"PRE",{class:!0});var x=M(t);p=X(x,!1),x.forEach(o),u=b(f),r=w(f,"P",{"data-svelte-h":!0}),j(r)!=="svelte-xowupu"&&(r.textContent=v),k=b(f),$=w(f,"PRE",{class:!0});var A=M($);S=X(A,!1),A.forEach(o),this.h()},h(){p.a=null,y(t,"class","language-ts"),S.a=null,y($,"class","language-ts")},m(f,x){i(f,n,x),i(f,s,x),i(f,t,x),p.m(c,t),i(f,u,x),i(f,r,x),i(f,k,x),i(f,$,x),S.m(E,$)},p:C,i:C,o:C,d(f){f&&(o(n),o(s),o(t),o(u),o(r),o(k),o($))}}}let Ia=class extends G{constructor(n){super(),D(this,n,null,Aa,F,{})}};function Ba(l){let n,a;return n=new Ia({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Fa(l){let n,a='<div id="gui" class="svelte-118vpkn"></div> <canvas id="lilguiCanvas"></canvas>';return{c(){n=h("span"),n.innerHTML=a,this.h()},l(s){n=w(s,"SPAN",{slot:!0,"data-svelte-h":!0}),j(n)!=="svelte-1dzi7ap"&&(n.innerHTML=a),this.h()},h(){y(n,"slot","live")},m(s,t){i(s,n,t)},p:C,d(s){s&&o(n)}}}function Ga(l){let n,a=`On page control panel. We are using <a href="https://lil-gui.georgealways.com" rel="nofollow">lil-gui</a>
for this example.`,s,t,p;return t=new pn({props:{$$slots:{live:[Fa],default:[Ba]},$$scope:{ctx:l}}}),{c(){n=h("p"),n.innerHTML=a,s=_(),H(t.$$.fragment)},l(c){n=w(c,"P",{"data-svelte-h":!0}),j(n)!=="svelte-1gzumgh"&&(n.innerHTML=a),s=b(c),P(t.$$.fragment,c)},m(c,u){i(c,n,u),i(c,s,u),R(t,c,u),p=!0},p(c,[u]){const r={};u&1&&(r.$$scope={dirty:u,ctx:c}),t.$set(r)},i(c){p||(T(t.$$.fragment,c),p=!0)},o(c){L(t.$$.fragment,c),p=!1},d(c){c&&(o(n),o(s)),z(t,c)}}}function Da(l){return sn(async()=>{const n=(await Sn(()=>import("../chunks/lil-gui.esm.0f09e890.js"),[],import.meta.url)).default,a=new n({container:document.getElementById("gui")??void 0,autoPlace:!1}),{width:s,height:t}=an(),p=new tn,c=new Pn(1,1,1),u=new yn({color:fa}),r=new W(c,u);p.add(r),a.add(r.position,"y").min(-3).max(3).step(.01),a.add(r.position,"x").min(-3).max(3).step(.01),a.add(r.position,"z").min(-3).max(3).step(.01);const v=new en(75,s/t);v.position.z=4,p.add(v);const k=new on({canvas:document.getElementById("lilguiCanvas")??void 0});k.setSize(s,t);function $(){k.render(p,v),window.requestAnimationFrame($)}$()}),[]}class ja extends G{constructor(n){super(),D(this,n,Da,Ga,F,{})}}function Ua(l){let n,a,s=`<code class="language-ts"><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// draw a cube</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> color<span class="token operator">:</span> <span class="token number">0xffffff</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// camera</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> width <span class="token operator">/</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// move camera in front of cube by moving camera along z access</span>
camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// renderer</span>
<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  canvas<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){n=h("pre"),a=new K(!1),this.h()},l(t){n=w(t,"PRE",{class:!0});var p=M(n);a=X(p,!1),p.forEach(o),this.h()},h(){a.a=null,y(n,"class","language-ts")},m(t,p){i(t,n,p),a.m(s,n)},p:C,i:C,o:C,d(t){t&&o(n)}}}let qa=class extends G{constructor(n){super(),D(this,n,null,Ua,F,{})}};function Va(l){let n,a;return n=new qa({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Na(l){let n;return{c(){n=h("canvas"),this.h()},l(a){n=w(a,"CANVAS",{id:!0,slot:!0}),M(n).forEach(o),this.h()},h(){y(n,"id","drawCubeCanvas"),y(n,"slot","live")},m(a,s){i(a,n,s)},p:C,d(a){a&&o(n)}}}function Oa(l){let n,a;return n=new pn({props:{$$slots:{live:[Na],default:[Va]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&1&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Za(l){return sn(()=>{const{width:n,height:a}=an(),s=new tn,t=new Pn(1,1,1),p=new yn({color:Mn}),c=new W(t,p);s.add(c);const u=new en(75,n/a);u.position.z=4,s.add(u);const r=new on({canvas:document.getElementById("drawCubeCanvas")??void 0});r.setSize(n,a),r.render(s,u)}),[]}class Wa extends G{constructor(n){super(),D(this,n,Za,Oa,F,{})}}function Ja(l){let n,a="Lights are performance hogs, try to use only what you need. Adjust intensity in control panel to see how different lights effect the cube and plane, or how these lights can be combined. Intensity is set to zero for all lights by default. Most lights come with helper functions (not included in live preview),",s,t,p,c=`<code class="language-ts"><span class="token keyword">const</span> directionalLightHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">DirectionalLightHelper</span><span class="token punctuation">(</span>
  directionalLight<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>directionalLightHelper<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,u,r,v="Note that <code>RectAreaLight</code>, only works with <code>MeshStandardMaterial</code> or <code>MeshPhysicalMaterial</code>.",k,$,S="When using Spot Light we have to add the target to the scene",E,f,x,A='<code class="language-ts">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>spotLight<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span></code>';return{c(){n=h("p"),n.textContent=a,s=_(),t=h("pre"),p=new K(!1),u=_(),r=h("p"),r.innerHTML=v,k=_(),$=h("p"),$.textContent=S,E=_(),f=h("pre"),x=new K(!1),this.h()},l(g){n=w(g,"P",{"data-svelte-h":!0}),j(n)!=="svelte-1rpd6v6"&&(n.textContent=a),s=b(g),t=w(g,"PRE",{class:!0});var d=M(t);p=X(d,!1),d.forEach(o),u=b(g),r=w(g,"P",{"data-svelte-h":!0}),j(r)!=="svelte-ga1qrk"&&(r.innerHTML=v),k=b(g),$=w(g,"P",{"data-svelte-h":!0}),j($)!=="svelte-1je2oeq"&&($.textContent=S),E=b(g),f=w(g,"PRE",{class:!0});var V=M(f);x=X(V,!1),V.forEach(o),this.h()},h(){p.a=null,y(t,"class","language-ts"),x.a=null,y(f,"class","language-ts")},m(g,d){i(g,n,d),i(g,s,d),i(g,t,d),p.m(c,t),i(g,u,d),i(g,r,d),i(g,k,d),i(g,$,d),i(g,E,d),i(g,f,d),x.m(A,f)},p:C,i:C,o:C,d(g){g&&(o(n),o(s),o(t),o(u),o(r),o(k),o($),o(E),o(f))}}}let Ka=class extends G{constructor(n){super(),D(this,n,null,Ja,F,{})}};function Xa(l){let n,a;return n=new Ka({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Ya(l){let n,a='<div id="lightsGUI" class="svelte-8lroe"></div> <canvas id="lightsCanvas"></canvas>';return{c(){n=h("span"),n.innerHTML=a,this.h()},l(s){n=w(s,"SPAN",{slot:!0,"data-svelte-h":!0}),j(n)!=="svelte-15ire7x"&&(n.innerHTML=a),this.h()},h(){y(n,"slot","live")},m(s,t){i(s,n,t)},p:C,d(s){s&&o(n)}}}function Qa(l){let n,a;return n=new pn({props:{$$slots:{live:[Ya],default:[Xa]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&2&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function nt(l){return sn(async()=>{const n=(await Sn(()=>import("../chunks/lil-gui.esm.0f09e890.js"),[],import.meta.url)).default,a=new n({container:document.getElementById("lightsGUI")??void 0,autoPlace:!1,closeFolders:!0});ks.enabled=!1;const{width:s,height:t}=an(),p=new tn,c=new Ts;c.roughness=1;const u=new W(new Pn(1,1,1),c);u.position.y=1.5,p.add(u);const r=new Hn(4);p.add(r);const v=new en(75,s/t);v.position.z=6,v.position.y=3,p.add(v);const k=new En(8,8),$=new W(k,c);$.rotation.x=Math.PI*1.5,p.add($);const S=new Rn(ys,0);p.add(S);const E=a.addFolder("Ambient Light");E.addColor(S,"color"),E.add(S,"intensity").min(0).max(5).step(1);const f=new ms(ta,0);p.add(f);const x=a.addFolder("Directional Light");x.addColor(f,"color"),x.add(f,"intensity").min(0).max(5).step(1),x.add(f.position,"x").min(-5).max(5).step(1),x.add(f.position,"y").min(-5).max(5).step(1),x.add(f.position,"z").min(-5).max(5).step(1);const A=new wa(ea,Mn,0);p.add(A);const g=a.addFolder("Hemisphere Light");g.addColor(A,"color").name("skyColor"),g.addColor(A,"groundColor"),g.add(A,"intensity").min(0).max(5).step(1);const d=new $a(ys,0,5,3);d.position.set(0,3,0),p.add(d);const V=a.addFolder("Point Light");V.addColor(d,"color"),V.add(d,"intensity").min(0).max(1e3).step(1),V.add(d.position,"x").min(-5).max(5).step(1),V.add(d.position,"y").min(-5).max(5).step(1),V.add(d.position,"z").min(-5).max(5).step(1),V.add(d,"decay").min(0).max(5).step(1);const q=new ga(oa,0,2,2);p.add(q);const N=a.addFolder("Rect Area Light");N.add(q,"intensity").min(0).max(1e3).step(1),N.add(q,"height").min(1).max(5).step(1),N.add(q,"width").min(1).max(5).step(1),N.add(q.position,"x").min(-5).max(5).step(1),N.add(q.position,"y").min(-5).max(5).step(1),N.add(q.position,"z").min(-5).max(5).step(1);const U=new pa(rs,0,10,Math.PI*.1,.25,1);U.position.set(1,1,-1),p.add(U),p.add(U.target);const O=a.addFolder("Spot Light");O.add(U,"intensity").min(0).max(1e3).step(1),O.add(U,"distance").min(0).max(5).step(.1),O.add(U,"penumbra").min(0).max(1).step(.01),O.add(U,"decay").min(0).max(100).step(1),O.add(U,"angle").min(0).max(360).step(1),O.add(U.position,"x").min(-5).max(5).step(1),O.add(U.position,"y").min(-5).max(5).step(1),O.add(U.position,"z").min(-5).max(5).step(1);const J=new on({canvas:document.getElementById("lightsCanvas")??void 0});J.setSize(s,t),J.outputColorSpace=ds;const Cn=new Ms(v,J.domElement);function cn(){Cn.update(),J.render(p,v),window.requestAnimationFrame(cn)}cn()}),[]}class st extends G{constructor(n){super(),D(this,n,nt,Qa,F,{})}}function at(l){let n,a,s=`<code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Font <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"three/examples/jsm/loaders/FontLoader"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> TextGeometry <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"three/examples/jsm/geometries/TextGeometry"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> matcap <span class="token keyword">from</span> <span class="token string">"../assets/matcap.png"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> typeface <span class="token keyword">from</span> <span class="token string">"../assets/your_typeface.json"</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>
<span class="token keyword">const</span> textGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextGeometry</span><span class="token punctuation">(</span><span class="token string">"Kayla's Portfolio"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  bevelEnabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  bevelOffset<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  bevelSegments<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  bevelSize<span class="token operator">:</span> <span class="token number">0.04</span><span class="token punctuation">,</span>
  bevelThickness<span class="token operator">:</span> <span class="token number">0.04</span><span class="token punctuation">,</span>
  curveSegments<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
  font<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span>typeface<span class="token punctuation">)</span><span class="token punctuation">,</span>
  height<span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token comment">// extrusion depth</span>
  size<span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
textGeometry<span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> textureLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> texture <span class="token operator">=</span> textureLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>matcap<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> textMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">MeshMatcapMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  matcap<span class="token operator">:</span> texture<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Mesh</span><span class="token punctuation">(</span>textGeometry<span class="token punctuation">,</span> textMaterial<span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){n=h("pre"),a=new K(!1),this.h()},l(t){n=w(t,"PRE",{class:!0});var p=M(n);a=X(p,!1),p.forEach(o),this.h()},h(){a.a=null,y(n,"class","language-ts")},m(t,p){i(t,n,p),a.m(s,n)},p:C,i:C,o:C,d(t){t&&o(n)}}}let tt=class extends G{constructor(n){super(),D(this,n,null,at,F,{})}};const et=""+new URL("../assets/matcap.c73bc61a.png",import.meta.url).href;function ot(l){let n,a;return n=new tt({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function pt(l){let n;return{c(){n=h("canvas"),this.h()},l(a){n=w(a,"CANVAS",{id:!0,slot:!0}),M(n).forEach(o),this.h()},h(){y(n,"id","3DTextCanvas"),y(n,"slot","live")},m(a,s){i(a,n,s)},p:C,d(a){a&&o(n)}}}function ct(l){let n,a;return n=new pn({props:{$$slots:{live:[pt],default:[ot]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&1&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function lt(l){return sn(async()=>{const{OrbitControls:n}=await Sn(()=>import("../chunks/OrbitControls.29d7259e.js"),["../chunks/OrbitControls.29d7259e.js","../chunks/three.module.6d4a35a4.js"],import.meta.url),{width:a,height:s}=an(),t=new tn,p=new en(50,a/s);p.position.z=5,p.position.y=-2,t.add(p);const c=new Rn(ys,1);t.add(c);const u=new on({canvas:document.getElementById("3DTextCanvas")??void 0});u.setSize(a,s);const r=new ka("Kayla's Portfolio",{bevelEnabled:!0,bevelOffset:0,bevelSegments:4,bevelSize:.04,bevelThickness:.04,curveSegments:24,font:new ma(da),height:.3,size:.8});r.center();const k=new Ls().load(et),$=new va({matcap:k}),S=new W(r,$);t.add(S);const E=new n(p,u.domElement);function f(){u.render(t,p),E.update(),window.requestAnimationFrame(f)}f()}),[]}class ut extends G{constructor(n){super(),D(this,n,lt,ct,F,{})}}function it(l){let n,a,s=`<code class="language-ts"><span class="token comment">// draw single cube (same as prev example)</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> color<span class="token operator">:</span> <span class="token number">0xffffff</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// reorder before rotation to avoid axis lock / confusion</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span><span class="token function">reorder</span><span class="token punctuation">(</span><span class="token string">"YXZ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Math.PI = half rotation on y axis</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>
mesh<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// axis helper</span>
<span class="token keyword">const</span> axisHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">AxesHelper</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axisHelper<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){n=h("pre"),a=new K(!1),this.h()},l(t){n=w(t,"PRE",{class:!0});var p=M(n);a=X(p,!1),p.forEach(o),this.h()},h(){a.a=null,y(n,"class","language-ts")},m(t,p){i(t,n,p),a.m(s,n)},p:C,i:C,o:C,d(t){t&&o(n)}}}let rt=class extends G{constructor(n){super(),D(this,n,null,it,F,{})}};function kt(l){let n,a;return n=new rt({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function mt(l){let n;return{c(){n=h("canvas"),this.h()},l(a){n=w(a,"CANVAS",{id:!0,slot:!0}),M(n).forEach(o),this.h()},h(){y(n,"id","transformCubeCanvas"),y(n,"slot","live")},m(a,s){i(a,n,s)},p:C,d(a){a&&o(n)}}}function dt(l){let n,a="Rotate & Reposition Single Cube",s,t,p;return t=new pn({props:{$$slots:{live:[mt],default:[kt]},$$scope:{ctx:l}}}),{c(){n=h("h3"),n.textContent=a,s=_(),H(t.$$.fragment)},l(c){n=w(c,"H3",{"data-svelte-h":!0}),j(n)!=="svelte-18388pi"&&(n.textContent=a),s=b(c),P(t.$$.fragment,c)},m(c,u){i(c,n,u),i(c,s,u),R(t,c,u),p=!0},p(c,[u]){const r={};u&1&&(r.$$scope={dirty:u,ctx:c}),t.$set(r)},i(c){p||(T(t.$$.fragment,c),p=!0)},o(c){L(t.$$.fragment,c),p=!1},d(c){c&&(o(n),o(s)),z(t,c)}}}function ft(l){return sn(()=>{const{width:n,height:a}=an(),s=new tn,t=new Pn(1,1,1),p=new yn({color:Mn}),c=new W(t,p);c.position.set(2,1,0),c.scale.set(1,.5,.5),c.rotation.reorder("YXZ"),c.rotation.y=Math.PI,c.rotation.x=Math.PI,s.add(c);const u=new Hn(4);s.add(u);const r=new en(75,n/a);r.position.z=4,r.lookAt(c.position),s.add(r);const v=new on({canvas:document.getElementById("transformCubeCanvas")??void 0});v.setSize(n,a),v.render(s,r)}),[]}class ht extends G{constructor(n){super(),D(this,n,ft,dt,F,{})}}function wt(l){let n,a="This example uses a helper function to draw cubes refer to previous examples for how to draw a cube.",s,t,p,c=`<code class="language-ts"><span class="token comment">// transformations</span>
<span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x98b9f2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secondCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x8cd790</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> thirdCube <span class="token operator">=</span> <span class="token function">drawCube</span><span class="token punctuation">(</span><span class="token number">0x918ef4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// move two of the cubes so they do not overlap</span>
secondCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
thirdCube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>firstCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>secondCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>thirdCube<span class="token punctuation">)</span><span class="token punctuation">;</span>
group<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// rotate group on y axis</span></code>`;return{c(){n=h("p"),n.textContent=a,s=_(),t=h("pre"),p=new K(!1),this.h()},l(u){n=w(u,"P",{"data-svelte-h":!0}),j(n)!=="svelte-3np7d1"&&(n.textContent=a),s=b(u),t=w(u,"PRE",{class:!0});var r=M(t);p=X(r,!1),r.forEach(o),this.h()},h(){p.a=null,y(t,"class","language-ts")},m(u,r){i(u,n,r),i(u,s,r),i(u,t,r),p.m(c,t)},p:C,i:C,o:C,d(u){u&&(o(n),o(s),o(t))}}}let $t=class extends G{constructor(n){super(),D(this,n,null,wt,F,{})}};function gt(l){let n,a;return n=new $t({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function vt(l){let n;return{c(){n=h("canvas"),this.h()},l(a){n=w(a,"CANVAS",{id:!0,slot:!0}),M(n).forEach(o),this.h()},h(){y(n,"id","transformThreeCubes"),y(n,"slot","live")},m(a,s){i(a,n,s)},p:C,d(a){a&&o(n)}}}function xt(l){let n,a="Group Three Cubes & Rotate on y Axis",s,t,p;return t=new pn({props:{$$slots:{live:[vt],default:[gt]},$$scope:{ctx:l}}}),{c(){n=h("h3"),n.textContent=a,s=_(),H(t.$$.fragment)},l(c){n=w(c,"H3",{"data-svelte-h":!0}),j(n)!=="svelte-1j6wysp"&&(n.textContent=a),s=b(c),P(t.$$.fragment,c)},m(c,u){i(c,n,u),i(c,s,u),R(t,c,u),p=!0},p(c,[u]){const r={};u&1&&(r.$$scope={dirty:u,ctx:c}),t.$set(r)},i(c){p||(T(t.$$.fragment,c),p=!0)},o(c){L(t.$$.fragment,c),p=!1},d(c){c&&(o(n),o(s)),z(t,c)}}}function _t(l){return sn(()=>{const{width:n,height:a}=an(),s=new tn,t=new xa;s.add(t);const p=is(ta),c=is(Mn),u=is(oa);c.position.x=-2,u.position.x=2,t.add(p),t.add(c),t.add(u),t.rotation.y=1;const r=new Hn(5);s.add(r);const v=new en(75,n/a);v.position.z=4,s.add(v);const k=new on({canvas:document.getElementById("transformThreeCubes")??void 0});k.setSize(n,a),k.render(s,v)}),[]}class bt extends G{constructor(n){super(),D(this,n,_t,xt,F,{})}}function yt(l){let n,a="Avoid shadows a much as possible. Use shadow baking for multiple shadows / better performance. Adjust intensity for each light in the control panel to see how the shadows change.";return{c(){n=h("p"),n.textContent=a},l(s){n=w(s,"P",{"data-svelte-h":!0}),j(n)!=="svelte-90qdwq"&&(n.textContent=a)},m(s,t){i(s,n,t)},p:C,i:C,o:C,d(s){s&&o(n)}}}let Ct=class extends G{constructor(n){super(),D(this,n,null,yt,F,{})}};function Et(l){let n,a;return n=new Ct({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function Tt(l){let n,a='<div id="shadowsGUI" class="svelte-p0c3y4"></div> <canvas id="shadowsCanvas"></canvas>';return{c(){n=h("span"),n.innerHTML=a,this.h()},l(s){n=w(s,"SPAN",{slot:!0,"data-svelte-h":!0}),j(n)!=="svelte-uekfkv"&&(n.innerHTML=a),this.h()},h(){y(n,"slot","live")},m(s,t){i(s,n,t)},p:C,d(s){s&&o(n)}}}function Lt(l){let n,a;return n=new pn({props:{$$slots:{live:[Tt],default:[Et]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&2&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function St(l){return sn(async()=>{const n=(await Sn(()=>import("../chunks/lil-gui.esm.0f09e890.js"),[],import.meta.url)).default,{OrbitControls:a}=await Sn(()=>import("../chunks/OrbitControls.29d7259e.js"),["../chunks/OrbitControls.29d7259e.js","../chunks/three.module.6d4a35a4.js"],import.meta.url),s=new n({container:document.getElementById("shadowsGUI")??void 0,autoPlace:!1,closeFolders:!0});ks.enabled=!1;const{width:t,height:p}=an(),c=new tn,u=new Ts,r=new W(new Pn(1,1,1));r.position.y=.5,r.castShadow=!0,c.add(r);const v=new Hn(4);c.add(v);const k=new en(75,t/p);k.position.z=8,k.position.y=3,k.position.x=3,c.add(k);const $=new En(8,8),S=new W($,u);S.rotation.x=Math.PI*1.5,S.receiveShadow=!0,c.add(S);const E=new Rn(rs,.25);c.add(E);const f=s.addFolder("Ambient Light");f.addColor(E,"color"),f.add(E,"intensity").min(0).max(5).step(1);const x=new ms(Ln,3);x.position.x=2,x.position.z=2,x.castShadow=!0,x.shadow.camera.near=1,x.shadow.camera.far=8,x.shadow.mapSize.width=1024,x.shadow.mapSize.height=1024,x.shadow.radius=12,x.shadow.camera.top=3,c.add(x);const A=s.addFolder("Directional Light");A.addColor(x,"color"),A.add(x,"intensity").min(0).max(5).step(1),A.add(x.position,"x").min(-5).max(5).step(1),A.add(x.position,"y").min(-5).max(5).step(1),A.add(x.position,"z").min(-5).max(5).step(1);const g=new _a(x.shadow.camera);c.add(g),g.visible=!1;const d=new pa(ha,50,5,Math.PI*.3);d.position.set(0,1,2),d.castShadow=!0,d.shadow.mapSize.width=1024,d.shadow.mapSize.height=1024,d.shadow.camera.fov=10,d.shadow.camera.near=.1,d.shadow.camera.far=5,c.add(d),c.add(d.target);const V=new ba(d);c.add(V),V.visible=!1;const q=s.addFolder("Spot Light");q.add(d,"intensity").min(0).max(1e3).step(1),q.add(d,"distance").min(0).max(5).step(.1),q.add(d,"penumbra").min(0).max(1).step(.01),q.add(d,"decay").min(0).max(100).step(1),q.add(d,"angle").min(0).max(360).step(1),q.add(d.position,"x").min(-5).max(5).step(1),q.add(d.position,"y").min(-5).max(5).step(1),q.add(d.position,"z").min(-5).max(5).step(1);const N=new on({canvas:document.getElementById("shadowsCanvas")??void 0});N.shadowMap.type=Ss,N.shadowMap.enabled=!0,N.setSize(t,p),N.outputColorSpace=ds;const U=new a(k,N.domElement);function O(){U.update(),N.render(c,k),window.requestAnimationFrame(O)}O()}),[]}class Mt extends G{constructor(n){super(),D(this,n,St,Lt,F,{})}}function Ht(l){let n,a="Shadows Animated Sphere",s,t,p='Instead of baking the shadow into the model directly using software, an alternative is loading a shadow texture as an alphaMap material and animating the resulting mesh relative to the sphere. The shadow jpg is loaded using the texture loader and the shadow mesh positioned slightly above the base plane. <a href="https://threejs.org/docs/#api/en/materials/MeshBasicMaterial.alphaMap" rel="nofollow">“The alpha map is a grayscale texture that controls the opacity across the surface (black: fully transparent; white: fully opaque)”</a>.',c,u,r,v=`<code class="language-ts"><span class="token keyword">import</span> simpleShadow <span class="token keyword">from</span> <span class="token string">"assets/textures/simpleShadow.jpg"</span><span class="token punctuation">;</span>

<span class="token comment">// plane mesh</span>
<span class="token keyword">const</span> planeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">PlaneGeometry</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> textureLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> texture <span class="token operator">=</span> textureLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>simpleShadow<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  alphaMap<span class="token operator">:</span> texture<span class="token punctuation">,</span>
  transparent<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  color<span class="token operator">:</span> <span class="token number">0x000000</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sphereShadow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Mesh</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">PlaneGeometry</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
sphereShadow<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
sphereShadow<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
sphereShadow<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereShadow<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,k,$,S="The following code that animates the sphere and it’s shadow in this example was taken directly from ThreeJS Journey.",E,f,x,A=`<code class="language-ts"><span class="token keyword">const</span> clock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">THREE</span></span><span class="token punctuation">.</span><span class="token function">Clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> elapsedTime <span class="token operator">=</span> clock<span class="token punctuation">.</span><span class="token function">getElapsedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Update the sphere</span>
  sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>elapsedTime<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
  sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>elapsedTime<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
  sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>elapsedTime <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Update the shadow</span>
  sphereShadow<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x<span class="token punctuation">;</span>
  sphereShadow<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z<span class="token punctuation">;</span>
  sphereShadow<span class="token punctuation">.</span>material<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">;</span>

  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){n=h("h3"),n.textContent=a,s=_(),t=h("p"),t.innerHTML=p,c=_(),u=h("pre"),r=new K(!1),k=_(),$=h("p"),$.textContent=S,E=_(),f=h("pre"),x=new K(!1),this.h()},l(g){n=w(g,"H3",{"data-svelte-h":!0}),j(n)!=="svelte-1reto47"&&(n.textContent=a),s=b(g),t=w(g,"P",{"data-svelte-h":!0}),j(t)!=="svelte-y2zpx9"&&(t.innerHTML=p),c=b(g),u=w(g,"PRE",{class:!0});var d=M(u);r=X(d,!1),d.forEach(o),k=b(g),$=w(g,"P",{"data-svelte-h":!0}),j($)!=="svelte-1s0m23m"&&($.textContent=S),E=b(g),f=w(g,"PRE",{class:!0});var V=M(f);x=X(V,!1),V.forEach(o),this.h()},h(){r.a=null,y(u,"class","language-ts"),x.a=null,y(f,"class","language-ts")},m(g,d){i(g,n,d),i(g,s,d),i(g,t,d),i(g,c,d),i(g,u,d),r.m(v,u),i(g,k,d),i(g,$,d),i(g,E,d),i(g,f,d),x.m(A,f)},p:C,i:C,o:C,d(g){g&&(o(n),o(s),o(t),o(c),o(u),o(k),o($),o(E),o(f))}}}let Pt=class extends G{constructor(n){super(),D(this,n,null,Ht,F,{})}};const ca=""+new URL("../assets/simpleShadow.426771c7.jpg",import.meta.url).href;function Rt(l){let n,a;return n=new Pt({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function zt(l){let n,a='<div id="shadowsSphereGUI"></div> <canvas id="shadowsSphereCanvas"></canvas>';return{c(){n=h("span"),n.innerHTML=a,this.h()},l(s){n=w(s,"SPAN",{slot:!0,"data-svelte-h":!0}),j(n)!=="svelte-bffs8x"&&(n.innerHTML=a),this.h()},h(){y(n,"slot","live")},m(s,t){i(s,n,t)},p:C,d(s){s&&o(n)}}}function At(l){let n,a;return n=new pn({props:{$$slots:{live:[zt],default:[Rt]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&2&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function It(l){return sn(()=>{ks.enabled=!1;const{width:n,height:a}=an(),s=new tn,t=new W(new ya(1),new Ts);s.add(t);const p=new en(75,n/a);p.position.z=8,p.position.y=3,p.position.x=3,s.add(p);const c=new En(8,8),r=new Ls().load(ca),v=new yn({alphaMap:r,transparent:!0,color:Cs}),k=new W(new En(3,3),v);k.rotation.x=Math.PI*1.5,k.position.z=.5,k.position.y=-.5,s.add(k);const $=new W(c,new yn);$.position.y=-1,$.rotation.x=Math.PI*1.5,s.add($);const S=new Rn(rs,.25);s.add(S);const E=new ms(Ln,3);E.position.x=2,E.position.z=2,E.shadow.camera.top=3,s.add(E);const f=new on({canvas:document.getElementById("shadowsSphereCanvas")??void 0});f.shadowMap.type=Ss,f.shadowMap.enabled=!0,f.setSize(n,a);const x=new Ms(p,f.domElement),A=new Es;function g(){x.update(),f.render(s,p);const d=A.getElapsedTime();t.position.x=Math.cos(d)*1.5,t.position.z=Math.sin(d)*1.5,t.position.y=Math.abs(Math.sin(d*3)),k.position.x=t.position.x,k.position.z=t.position.z,k.material.opacity=(1-t.position.y)*.4,window.requestAnimationFrame(g)}g(),f.outputColorSpace=ds}),[]}class Bt extends G{constructor(n){super(),D(this,n,It,At,F,{})}}function Ft(l){let n,a="Z-Fighting Planes",s,t,p="Z-Fighting planes, if two planes have x,y,z values, the renderer can have trouble determining which plane should be on top. The result is a glitch like effect where one plane flashes through the other.";return{c(){n=h("h3"),n.textContent=a,s=_(),t=h("p"),t.textContent=p},l(c){n=w(c,"H3",{"data-svelte-h":!0}),j(n)!=="svelte-1iwk6wk"&&(n.textContent=a),s=b(c),t=w(c,"P",{"data-svelte-h":!0}),j(t)!=="svelte-1awezxs"&&(t.textContent=p)},m(c,u){i(c,n,u),i(c,s,u),i(c,t,u)},p:C,i:C,o:C,d(c){c&&(o(n),o(s),o(t))}}}let Gt=class extends G{constructor(n){super(),D(this,n,null,Ft,F,{})}};function Dt(l){let n,a;return n=new Gt({}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function jt(l){let n;return{c(){n=h("canvas"),this.h()},l(a){n=w(a,"CANVAS",{id:!0,slot:!0}),M(n).forEach(o),this.h()},h(){y(n,"id","ZFightingCanvas"),y(n,"slot","live")},m(a,s){i(a,n,s)},p:C,d(a){a&&o(n)}}}function Ut(l){let n,a;return n=new pn({props:{$$slots:{live:[jt],default:[Dt]},$$scope:{ctx:l}}}),{c(){H(n.$$.fragment)},l(s){P(n.$$.fragment,s)},m(s,t){R(n,s,t),a=!0},p(s,[t]){const p={};t&2&&(p.$$scope={dirty:t,ctx:s}),n.$set(p)},i(s){a||(T(n.$$.fragment,s),a=!0)},o(s){L(n.$$.fragment,s),a=!1},d(s){z(n,s)}}}function qt(l){return sn(()=>{ks.enabled=!1;const{width:n,height:a}=an(),s=new tn,t=new en(75,n/a);t.position.z=8,t.position.y=3,t.position.x=3,s.add(t);const p=new En(8,8),u=new Ls().load(ca),r=new yn({alphaMap:u,transparent:!0,color:Ln}),v=new W(new En(3,3),r);v.rotation.x=Math.PI*1.5,s.add(v);const k=new W(p,new yn);k.rotation.x=Math.PI*1.5,s.add(k);const $=new Rn(rs,.25);s.add($);const S=new ms(Ln,3);S.position.x=2,S.position.z=2,S.shadow.camera.top=3,s.add(S);const E=new on({canvas:document.getElementById("ZFightingCanvas")??void 0});E.shadowMap.type=Ss,E.shadowMap.enabled=!0,E.setSize(n,a),E.outputColorSpace=ds;const f=new Ms(t,E.domElement),x=new Es;function A(){f.update(),E.render(s,t);const g=x.getElapsedTime();k.rotation.z=g,window.requestAnimationFrame(A)}A()}),[]}class Vt extends G{constructor(n){super(),D(this,n,qt,Ut,F,{})}}function Nt(l){let n,a;return{c(){n=Ks("svg"),a=Ks("path"),this.h()},l(s){n=Xs(s,"svg",{viewBox:!0,version:!0,width:!0,height:!0,"aria-hidden":!0});var t=M(n);a=Xs(t,"path",{d:!0}),M(a).forEach(o),t.forEach(o),this.h()},h(){y(a,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),y(n,"viewBox","0 0 16 16"),y(n,"version","1.1"),y(n,"width","16"),y(n,"height","16"),y(n,"aria-hidden","true")},m(s,t){i(s,n,t),Z(n,a)},p:C,i:C,o:C,d(s){s&&o(n)}}}class Ot extends G{constructor(n){super(),D(this,n,null,Nt,F,{})}}function na(l,n,a){const s=l.slice();return s[5]=n[a],s[7]=a,s}function sa(l){let n,a,s,t=l[5]+"",p,c,u,r,v;return a=new Ot({}),{c(){n=h("a"),H(a.$$.fragment),s=_(),p=Q(t),c=_(),this.h()},l(k){n=w(k,"A",{class:!0,href:!0});var $=M(n);P(a.$$.fragment,$),s=b($),p=nn($,t),c=b($),$.forEach(o),this.h()},h(){y(n,"class","shortcut svelte-vfkh4r"),y(n,"href","#anchor-"+l[7])},m(k,$){i(k,n,$),R(a,n,null),Z(n,s),Z(n,p),Z(n,c),u=!0,r||(v=aa(n,"click",Wt),r=!0)},p:C,i(k){u||(T(a.$$.fragment,k),u=!0)},o(k){L(a.$$.fragment,k),u=!1},d(k){k&&o(n),z(a),r=!1,v()}}}function Zt(l){let n,a="Threejs",s,t,p,c,u,r,v,k,$=l[0][0]+"",S,E,f,x,A,g,d,V=l[0][1]+"",q,N,U,O,J,Cn,cn,zn,ln,Hs=l[0][2]+"",fs,An,un,In,Bn,Fn,rn,Ps=l[0][3]+"",hs,Gn,kn,Dn,jn,Un,mn,Rs=l[0][4]+"",ws,qn,dn,Vn,Nn,On,fn,zs=l[0][5]+"",$s,Zn,hn,Wn,Jn,Kn,wn,As=l[0][6]+"",gs,Xn,$n,Yn,gn,Qn,ns,ss,vn,Is=l[0][7]+"",vs,as,xn,ts,es,os,_n,Bs=`references & inspiration 
1. https://threejs.org/examples
2. https://threejs-journey.com
`,ps,Y,xs,cs,_s,Fs,bn=Ys(l[0]),I=[];for(let e=0;e<bn.length;e+=1)I[e]=sa(na(l,bn,e));const la=e=>L(I[e],1,1,()=>{I[e]=null});return f=new Wa({}),U=new ht({}),J=new bt({}),un=new za({}),kn=new ja({}),dn=new ut({}),hn=new st({}),$n=new Mt({}),gn=new Bt({}),xn=new Vt({}),{c(){n=h("h1"),n.textContent=a,s=_(),t=h("br"),p=_(),c=h("div");for(let e=0;e<I.length;e+=1)I[e].c();u=_(),r=h("br"),v=_(),k=h("h2"),S=Q($),E=_(),H(f.$$.fragment),x=_(),A=h("br"),g=_(),d=h("h2"),q=Q(V),N=_(),H(U.$$.fragment),O=_(),H(J.$$.fragment),Cn=_(),cn=h("br"),zn=_(),ln=h("h2"),fs=Q(Hs),An=_(),H(un.$$.fragment),In=_(),Bn=h("br"),Fn=_(),rn=h("h2"),hs=Q(Ps),Gn=_(),H(kn.$$.fragment),Dn=_(),jn=h("br"),Un=_(),mn=h("h2"),ws=Q(Rs),qn=_(),H(dn.$$.fragment),Vn=_(),Nn=h("br"),On=_(),fn=h("h2"),$s=Q(zs),Zn=_(),H(hn.$$.fragment),Wn=_(),Jn=h("br"),Kn=_(),wn=h("h2"),gs=Q(As),Xn=_(),H($n.$$.fragment),Yn=_(),H(gn.$$.fragment),Qn=_(),ns=h("br"),ss=_(),vn=h("h2"),vs=Q(Is),as=_(),H(xn.$$.fragment),ts=_(),es=h("br"),os=_(),_n=h("pre"),_n.textContent=Bs,ps=_(),Y=h("button"),xs=Q("top"),this.h()},l(e){n=w(e,"H1",{"data-svelte-h":!0}),j(n)!=="svelte-d57g4n"&&(n.textContent=a),s=b(e),t=w(e,"BR",{}),p=b(e),c=w(e,"DIV",{class:!0,style:!0});var m=M(c);for(let bs=0;bs<I.length;bs+=1)I[bs].l(m);m.forEach(o),u=b(e),r=w(e,"BR",{}),v=b(e),k=w(e,"H2",{id:!0});var B=M(k);S=nn(B,$),B.forEach(o),E=b(e),P(f.$$.fragment,e),x=b(e),A=w(e,"BR",{}),g=b(e),d=w(e,"H2",{id:!0});var Tn=M(d);q=nn(Tn,V),Tn.forEach(o),N=b(e),P(U.$$.fragment,e),O=b(e),P(J.$$.fragment,e),Cn=b(e),cn=w(e,"BR",{}),zn=b(e),ln=w(e,"H2",{id:!0});var Gs=M(ln);fs=nn(Gs,Hs),Gs.forEach(o),An=b(e),P(un.$$.fragment,e),In=b(e),Bn=w(e,"BR",{}),Fn=b(e),rn=w(e,"H2",{id:!0});var Ds=M(rn);hs=nn(Ds,Ps),Ds.forEach(o),Gn=b(e),P(kn.$$.fragment,e),Dn=b(e),jn=w(e,"BR",{}),Un=b(e),mn=w(e,"H2",{id:!0});var js=M(mn);ws=nn(js,Rs),js.forEach(o),qn=b(e),P(dn.$$.fragment,e),Vn=b(e),Nn=w(e,"BR",{}),On=b(e),fn=w(e,"H2",{id:!0});var Us=M(fn);$s=nn(Us,zs),Us.forEach(o),Zn=b(e),P(hn.$$.fragment,e),Wn=b(e),Jn=w(e,"BR",{}),Kn=b(e),wn=w(e,"H2",{id:!0});var qs=M(wn);gs=nn(qs,As),qs.forEach(o),Xn=b(e),P($n.$$.fragment,e),Yn=b(e),P(gn.$$.fragment,e),Qn=b(e),ns=w(e,"BR",{}),ss=b(e),vn=w(e,"H2",{id:!0});var Vs=M(vn);vs=nn(Vs,Is),Vs.forEach(o),as=b(e),P(xn.$$.fragment,e),ts=b(e),es=w(e,"BR",{}),os=b(e),_n=w(e,"PRE",{"data-svelte-h":!0}),j(_n)!=="svelte-7y9zir"&&(_n.textContent=Bs),ps=b(e),Y=w(e,"BUTTON",{class:!0,style:!0});var Ns=M(Y);xs=nn(Ns,"top"),Ns.forEach(o),this.h()},h(){y(c,"class","shortcuts svelte-vfkh4r"),ls(c,"--anchor-color",l[1]),ls(c,"--anchor-color-alt",l[2]),y(k,"id","anchor-0"),y(d,"id","anchor-1"),y(ln,"id","anchor-2"),y(rn,"id","anchor-3"),y(mn,"id","anchor-4"),y(fn,"id","anchor-5"),y(wn,"id","anchor-6"),y(vn,"id","anchor-7"),y(Y,"class","scroll-top svelte-vfkh4r"),ls(Y,"--scroll-top-color",l[3]),ls(Y,"--scroll-top-color-alt",l[4])},m(e,m){i(e,n,m),i(e,s,m),i(e,t,m),i(e,p,m),i(e,c,m);for(let B=0;B<I.length;B+=1)I[B]&&I[B].m(c,null);i(e,u,m),i(e,r,m),i(e,v,m),i(e,k,m),Z(k,S),i(e,E,m),R(f,e,m),i(e,x,m),i(e,A,m),i(e,g,m),i(e,d,m),Z(d,q),i(e,N,m),R(U,e,m),i(e,O,m),R(J,e,m),i(e,Cn,m),i(e,cn,m),i(e,zn,m),i(e,ln,m),Z(ln,fs),i(e,An,m),R(un,e,m),i(e,In,m),i(e,Bn,m),i(e,Fn,m),i(e,rn,m),Z(rn,hs),i(e,Gn,m),R(kn,e,m),i(e,Dn,m),i(e,jn,m),i(e,Un,m),i(e,mn,m),Z(mn,ws),i(e,qn,m),R(dn,e,m),i(e,Vn,m),i(e,Nn,m),i(e,On,m),i(e,fn,m),Z(fn,$s),i(e,Zn,m),R(hn,e,m),i(e,Wn,m),i(e,Jn,m),i(e,Kn,m),i(e,wn,m),Z(wn,gs),i(e,Xn,m),R($n,e,m),i(e,Yn,m),R(gn,e,m),i(e,Qn,m),i(e,ns,m),i(e,ss,m),i(e,vn,m),Z(vn,vs),i(e,as,m),R(xn,e,m),i(e,ts,m),i(e,es,m),i(e,os,m),i(e,_n,m),i(e,ps,m),i(e,Y,m),Z(Y,xs),cs=!0,_s||(Fs=aa(Y,"click",Jt),_s=!0)},p(e,[m]){if(m&1){bn=Ys(e[0]);let B;for(B=0;B<bn.length;B+=1){const Tn=na(e,bn,B);I[B]?(I[B].p(Tn,m),T(I[B],1)):(I[B]=sa(Tn),I[B].c(),T(I[B],1),I[B].m(c,null))}for(ra(),B=bn.length;B<I.length;B+=1)la(B);ua()}},i(e){if(!cs){for(let m=0;m<bn.length;m+=1)T(I[m]);T(f.$$.fragment,e),T(U.$$.fragment,e),T(J.$$.fragment,e),T(un.$$.fragment,e),T(kn.$$.fragment,e),T(dn.$$.fragment,e),T(hn.$$.fragment,e),T($n.$$.fragment,e),T(gn.$$.fragment,e),T(xn.$$.fragment,e),cs=!0}},o(e){I=I.filter(Boolean);for(let m=0;m<I.length;m+=1)L(I[m]);L(f.$$.fragment,e),L(U.$$.fragment,e),L(J.$$.fragment,e),L(un.$$.fragment,e),L(kn.$$.fragment,e),L(dn.$$.fragment,e),L(hn.$$.fragment,e),L($n.$$.fragment,e),L(gn.$$.fragment,e),L(xn.$$.fragment,e),cs=!1},d(e){e&&(o(n),o(s),o(t),o(p),o(c),o(u),o(r),o(v),o(k),o(E),o(x),o(A),o(g),o(d),o(N),o(O),o(Cn),o(cn),o(zn),o(ln),o(An),o(In),o(Bn),o(Fn),o(rn),o(Gn),o(Dn),o(jn),o(Un),o(mn),o(qn),o(Vn),o(Nn),o(On),o(fn),o(Zn),o(Wn),o(Jn),o(Kn),o(wn),o(Xn),o(Yn),o(Qn),o(ns),o(ss),o(vn),o(as),o(ts),o(es),o(os),o(_n),o(ps),o(Y)),ia(I,e),z(f,e),z(U,e),z(J,e),z(un,e),z(kn,e),z(dn,e),z(hn,e),z($n,e),z(gn,e),z(xn,e),_s=!1,Fs()}}}function Wt(l){l.preventDefault();const n=l.currentTarget,a=new URL(n.href).hash.replace("#",""),s=document.getElementById(a);window.scrollTo({top:s==null?void 0:s.offsetTop,behavior:"smooth"})}function Jt(l){window.scrollTo({top:0,behavior:"smooth"})}function Kt(l){const n=["Draw a Cube","Transform Cubes","Animate","Debug GUI","3D Text","Lights","Shadows","Quirks"];let a=us(ea),s=us(Cs),t=us(Ln),p=us(Cs);return[n,a,s,t,p]}class de extends G{constructor(n){super(),D(this,n,Kt,Zt,F,{})}}export{de as component};
